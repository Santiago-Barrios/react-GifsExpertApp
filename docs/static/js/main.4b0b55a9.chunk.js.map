{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","placeholder","onChange","target","getGifs","category","a","url","encodeURI","fetch","res","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAyCeA,MAtCf,YAA2C,IAAnBC,EAAkB,EAAlBA,cAAkB,EAEJC,mBAAS,IAFL,mBAEjCC,EAFiC,KAErBC,EAFqB,KAqBxC,OACE,sBAAMC,SAba,SAACC,GAEpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,MAOhB,SACE,uBACEO,KAAO,OACPC,MAAST,EACTU,YAAc,kBACdC,SAvBoB,SAACR,GAEzBF,EAAeE,EAAES,OAAOH,a,+BCRfI,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEfC,EAFe,iDAEkCC,UAAWH,GAF7C,+DAGHI,MAAOF,GAHJ,cAGfG,EAHe,gBAIAA,EAAIC,OAJJ,uBAIdC,EAJc,EAIdA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GACrB,MAAM,CACJC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAVhB,kBAcdM,GAdc,4CAAH,sDCEPO,EAAc,SAAC,GAAyB,EAAtBJ,GAAuB,IAAnBT,EAAkB,EAAlBA,IAAKU,EAAa,EAAbA,MAEtC,OACE,sBAAKI,UAAU,yCAAf,UACE,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,kCAAKA,EAAL,WCJOO,EAAU,SAAC,GAAoB,IAAjBnB,EAAgB,EAAhBA,SAAgB,ECAf,SAAEA,GAAe,IAAD,EAEhBf,mBAAS,CACjCsB,KAAM,GACNa,SAAS,IAJ+B,mBAEnCC,EAFmC,KAE5BC,EAF4B,KAwB1C,OAjBEC,qBAAW,WAETxB,EAAQC,GACLwB,MAAK,SAAAC,GAGFH,EAAS,CACPf,KAAOkB,EACPL,SAAS,SAMlB,CAAEpB,IAGEqB,EDtB2BK,CAAc1B,GAAlCa,EAF2B,EAEjCN,KAAca,EAFmB,EAEnBA,QAGtB,OACE,qCACE,qBAAIJ,UAAU,oCAAd,cAAoDhB,EAApD,OAEEoB,GAAW,mBAAGJ,UAAU,mCAAb,yBAEb,qBAAKA,UAAU,YAAf,SAGMH,EAAOJ,KAAK,SAAAC,GACV,OACE,cAAC,EAAD,eAEOA,GADCA,EAAIC,aESbgB,EAzBM,WAAO,IAAD,EAEW1C,mBAAS,CAAC,gBAFrB,mBAElB2C,EAFkB,KAEN5C,EAFM,KAIzB,OACE,qCACE,gDACA,cAAC,EAAD,CAAaA,cAAkBA,IAC/B,uBAGF,6BAEI4C,EAAWnB,KAAK,SAAAT,GAAQ,OACtB,cAAC,EAAD,CAEAA,SAAYA,GADLA,Y,MCbjB6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,U","file":"static/js/main.4b0b55a9.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction AddCategory( { setCategories } ) {\r\n\r\n  const [inputValue, setInputValue] = useState(''); // string VacÃ­o necesario\r\n\r\n  const handleInputChange = (e) => {\r\n    // console.log(e.target.value);\r\n    setInputValue( e.target.value );\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n\r\n    e.preventDefault();\r\n\r\n    if( inputValue.trim().length > 2 ){\r\n      setCategories(cats => [ inputValue ,...cats ]);\r\n      setInputValue('');\r\n    }\r\n\r\n\r\n  }\r\n\r\n  return (\r\n    <form onSubmit = { handleSubmit }>\r\n      <input\r\n        type = \"text\"\r\n        value = {inputValue}\r\n        placeholder = 'Agrega tu serie'\r\n        onChange = { handleInputChange }\r\n      />\r\n    </form>\r\n  )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default AddCategory\r\n","\r\nexport const getGifs = async ( category ) => {\r\n\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=BVtQVNAlmAGrRltgYkXtVP8P4c9lZdN9`;\r\n  const res = await fetch( url );\r\n  const {data} = await res.json();\r\n\r\n  const gifs = data.map( img => {\r\n    return{\r\n      id: img.id, \r\n      title: img.title,\r\n      url: img.images.downsized_medium.url,\r\n    }\r\n  })\r\n\r\n  return gifs;\r\n}","import React from 'react';\r\n\r\n\r\nexport const GifGridItem = ( { id, url, title } ) => {\r\n\r\n  return (\r\n    <div className=\"card animate__animated animate__bounce\">\r\n      <img src={url} alt={title} />\r\n      <p> {title} </p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport {useFetchGifs} from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ( { category } ) => {\r\n\r\n  const { data: images, loading } = useFetchGifs( category );\r\n\r\n\r\n  return (\r\n    <> \r\n      <h3 className=\"animate__animated animate__fadeIn\"> {category} </h3>\r\n\r\n      { loading && <p className=\"animate__animated animate__flash\">Loading ...</p> }\r\n\r\n      <div className='card-grid'>\r\n        \r\n          {\r\n            images.map( img => {\r\n              return(\r\n                <GifGridItem\r\n                  key={ img.id }\r\n                  { ...img }\r\n                />\r\n              )\r\n            })\r\n          }\r\n        \r\n\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true\r\n  });\r\n\r\n    useEffect( () => {\r\n\r\n      getGifs(category)\r\n        .then(imgs => {\r\n\r\n\r\n            setState({\r\n              data : imgs,\r\n              loading: false\r\n            });\r\n\r\n\r\n        });\r\n        \r\n  }, [ category ] );\r\n\r\n\r\n  return state; // { data: [], loading : true };\r\n  \r\n}","\r\nimport React, {useState} from 'react'\r\nimport AddCategory from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n  const [categories, setCategories] = useState(['Dragon Ball']);\r\n\r\n  return (\r\n    <>\r\n      <h2> GifExpertApp </h2>\r\n      <AddCategory setCategories = { setCategories } />\r\n      < hr />\r\n\r\n    \r\n    <ol>\r\n      {\r\n        categories.map( category => (\r\n          <GifGrid\r\n          key = {category}\r\n          category = {category} \r\n          />\r\n         ))\r\n      }\r\n    </ol>\r\n\r\n    </>\r\n  )\r\n}\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('App')\n);\n\n"],"sourceRoot":""}